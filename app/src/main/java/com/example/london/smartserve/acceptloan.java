package com.example.london.smartserve;import android.app.ProgressDialog;import android.content.Intent;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ServerValue;import com.google.firebase.database.ValueEventListener;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import java.util.Locale;public class acceptloan extends AppCompatActivity {    private DatabaseReference reference,mDatatabasekey,data,mDatabases6,mDatabases5,mDatabases4,mDatabases,mDatabase,mDatabases2,accounting,mD0,memacco;    private String u_key,grpkey,meetid,ttest=null,gmid=null,fee1,fee2,jina,loancash=null,loanappamount=null,ggname,user,target,nme;    private TextView mAmount,mInst;    private ProgressDialog mProgress;    private double newloanbal,newloanins;    private FirebaseAuth mAuth;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_acceptloan);        Bundle extras = getIntent().getExtras();        grpkey= extras.getString("gkey");        u_key= extras.getString("key");        meetid=extras.getString("meet");        mAmount=findViewById(R.id.reqloan);        mInst=findViewById(R.id.reqloaninstall);        final Button cnf =  findViewById(R.id.btnconfirm);        Button ltr =  findViewById(R.id.btnlater);        mAuth=FirebaseAuth.getInstance();        user=mAuth.getCurrentUser().getUid();        mDatatabasekey= FirebaseDatabase.getInstance().getReference().child("details").child(grpkey);        data=FirebaseDatabase.getInstance().getReference().child("members").child(u_key);        mProgress=new ProgressDialog(this);        mProgress.setTitle("Please Wait");        mProgress.setIcon(R.mipmap.smartservelogos);        mDatabases=FirebaseDatabase.getInstance().getReference();        accounting=FirebaseDatabase.getInstance().getReference().child("Accounting");        mDatabase=FirebaseDatabase.getInstance().getReference().child("loandisbursed");        mDatabases6=FirebaseDatabase.getInstance().getReference().child("members");        mDatabases5=FirebaseDatabase.getInstance().getReference().child("finances").child(grpkey).child("loans");        mDatabases4=FirebaseDatabase.getInstance().getReference().child("fees").child(grpkey);        mDatabases2=FirebaseDatabase.getInstance().getReference().child("loanapprovals").child(u_key);        mD0=FirebaseDatabase.getInstance().getReference().child("Accounts");        reference=FirebaseDatabase.getInstance().getReference();        memacco=FirebaseDatabase.getInstance().getReference().child("members").child(u_key).child("account");        mDatatabasekey.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot dataSnapshot) {                ggname=dataSnapshot.child("groupdetails").child("groupName").getValue().toString();            }            @Override            public void onCancelled(DatabaseError databaseError) {            }        });        data.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot dataSnapshot) {                jina=dataSnapshot.child("details").child("name").getValue().toString();            }            @Override            public void onCancelled(DatabaseError databaseError) {            }        });        FirebaseDatabase.getInstance().getReference().child("Employees").child(user).addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot dataSnapshot) {                nme=dataSnapshot.child("name").getValue().toString();            }            @Override            public void onCancelled(DatabaseError databaseError) {            }        });        mDatabases2.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot dataSnapshot) {                if (dataSnapshot.hasChildren()){                    mDatabases2.addListenerForSingleValueEvent(new ValueEventListener() {                        @Override                        public void onDataChange(DataSnapshot dataSnapshot) {                            String loanappamount=dataSnapshot.child("amountrequested").getValue().toString();                            String installments=dataSnapshot.child("monthlypay").getValue().toString();                            String t=dataSnapshot.child("type").getValue().toString();                            gmid=dataSnapshot.child("gmid").getValue().toString();                            mAmount.setText(loanappamount);                            mInst.setText(installments);                            if (t.equals("group")){                                ttest="group";                            }else {                                ttest="indv";                            }                        }                        @Override                        public void onCancelled(DatabaseError databaseError) {                        }                    });                    cnf.setOnClickListener(new View.OnClickListener() {                        @Override                        public void onClick(View v) {                            cnf.setVisibility(View.INVISIBLE);                            if (ttest.equals("group")){                                acceptg();                            }else {                                accept();                            }                        }                    });                }else {                    Toast.makeText(acceptloan.this,"Member Doesn't have a loan!", Toast.LENGTH_LONG).show();                }            }            @Override            public void onCancelled(DatabaseError databaseError) {            }        });        ltr.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent userwind = new Intent(acceptloan.this,meeting.class);                userwind.putExtra("key",grpkey);                startActivity(userwind);                finish();            }        });    }    private void acceptg() {        mProgress.setMessage("Accepting Group Loans");        mProgress.setCanceledOnTouchOutside(false);        mProgress.show();        mDatabases6.child("allmembers").child(grpkey).addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot dataSnapshot) {                for (DataSnapshot snapshot:dataSnapshot.getChildren()){                    String iid=snapshot.child("uid").getValue().toString();                    mDatabases6.child(iid).child("details").addListenerForSingleValueEvent(new ValueEventListener() {                        @Override                        public void onDataChange(DataSnapshot dataSnapshot) {                            if (dataSnapshot.child("clearance").getValue().toString().equals("groupAC")){                                target=dataSnapshot.getKey();                                mDatabases2.addListenerForSingleValueEvent(new ValueEventListener() {                                    @Override                                    public void onDataChange(DataSnapshot dataSnapshot1) {                                        final String loanappamount=dataSnapshot1.child("amountrequested").getValue().toString();                                        final String loancash=dataSnapshot1.child("amountcash").getValue().toString();                                        final String installments=dataSnapshot1.child("monthlypay").getValue().toString();                                        final double loanapp=Double.parseDouble(loanappamount);                                        DatabaseReference newloanee=mDatabases5.child("loanees").push();                                        newloanee.child("dateapproved").setValue(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                                        newloanee.child("amount").setValue(loanappamount);                                        final DatabaseReference newloaninfo=mDatabases5.child("approvals").push();                                        final String infoid=newloaninfo.getKey();                                        newloaninfo.child("dateapproved").setValue(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                                        newloaninfo.child("amount").setValue(loanappamount);                                        newloaninfo.child("amountcash").setValue(loancash);                                        newloaninfo.child("memberid").setValue(gmid);                                        newloaninfo.child("groupid").setValue(grpkey);                                        newloaninfo.child("status").setValue("done");                                        DatabaseReference loanrequest=mDatabase.push();                                        loanrequest.child("amountcash").setValue(loancash);                                        loanrequest.child("userid").setValue(u_key);                                        loanrequest.child("amountrequested").setValue(loanappamount);                                        loanrequest.child("monthlypay").setValue(installments);                                        loanrequest.child("status").setValue("accepted");                                        loanrequest.child("type").setValue("indv");                                        loanrequest.child("gmid").setValue(u_key);                                        loanrequest.child("gname").setValue(ggname);                                        loanrequest.child("username").setValue(jina);                                        mDatabases6.child(target).child("loans").addListenerForSingleValueEvent(new ValueEventListener() {                                            @Override                                            public void onDataChange(DataSnapshot dataSnapshot) {                                                String currloan=(String)dataSnapshot.child("totalloan").getValue();                                                String currint=(String)dataSnapshot.child("installment").getValue();                                                double cuuintr=Double.parseDouble(currint);                                                double currloanint=Double.parseDouble(currloan);                                                double loanapp=Double.parseDouble(loanappamount);                                                double newloans=currloanint+loanapp;                                                String newcurrloan=String.valueOf(newloans);                                                DatabaseReference newpersonalloan=data.child("loans");                                                newpersonalloan.child("totalloan").setValue(newcurrloan);                                                newpersonalloan.child("installment").setValue(Double.parseDouble(installments)+cuuintr);                                                final String amnt=newcurrloan;                                                mDatabases6.child(target).child("ptemptrs").addListenerForSingleValueEvent(new ValueEventListener() {                                                    @Override                                                    public void onDataChange(DataSnapshot dataSnapshot) {                                                        if (dataSnapshot.exists()){                                                            final String id=dataSnapshot.child("pid").getValue().toString();                                                            mDatatabasekey.child("transactions").child(meetid).child(id).addListenerForSingleValueEvent(new ValueEventListener() {                                                                @Override                                                                public void onDataChange(DataSnapshot dataSnapshot) {                                                                    double plgvn=Double.parseDouble(dataSnapshot.child("loangvn").getValue().toString());                                                                    double plcf=Double.parseDouble(dataSnapshot.child("loancf").getValue().toString());                                                                    double nlgv=Double.parseDouble(amnt)+plgvn;                                                                    double nlcf=Double.parseDouble(amnt)+plcf;                                                                    DatabaseReference tt=mDatatabasekey.child("transactions").child(meetid).child(id);                                                                    tt.child("loangvn").setValue(String.valueOf(nlgv));                                                                    tt.child("loancf").setValue(String.valueOf(nlcf));                                                                }                                                                @Override                                                                public void onCancelled(DatabaseError databaseError) {                                                                }                                                            });                                                        }                                                    }                                                    @Override                                                    public void onCancelled(DatabaseError databaseError) {                                                    }                                                });                                            }                                            @Override                                            public void onCancelled(DatabaseError databaseError) {                                            }                                        });                                        if (loanapp<=20000) {                                            DatabaseReference lfee = mDatabases4.child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).child("loanprocessing").push();                                            lfee.child("amount").setValue("0");                                            lfee.child("memberid").setValue(u_key);                                            newloaninfo.child("fee").setValue("0");                                            fee1=String.valueOf("0");                                            DatabaseReference lfees = data.child("loans").child("approvals").child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                                            lfees.child("amount").setValue("0");                                            lfees.child("memberid").setValue(u_key);                                        }else{                                            DatabaseReference lfee = mDatabases4.child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).child("loanprocessing").push();                                            lfee.child("amount").setValue("0");                                            lfee.child("memberid").setValue(u_key);                                            newloaninfo.child("fee").setValue("0");                                            fee2=String.valueOf("0");                                            DatabaseReference lfees = data.child("loans").child("approvals").child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                                            lfees.child("amount").setValue("0");                                            lfees.child("memberid").setValue(u_key);                                        }                                        mDatabases6.child(gmid).child("project").child("loans").addListenerForSingleValueEvent(new ValueEventListener() {                                            @Override                                            public void onDataChange(DataSnapshot dataSnapshot) {                                                DatabaseReference newpersonalloan=mDatabases6.child(gmid).child("project").child("loans");                                                newpersonalloan.child("info").setValue(infoid);                                                newpersonalloan.child("totalloan").setValue(loanappamount);                                                newpersonalloan.child("installment").setValue(installments);                                                newpersonalloan.child("nextloanpaydate").setValue(setdate());                                                DatabaseReference loanflag=mDatabases6.child(gmid);                                                loanflag.child("gloanflag").setValue("yes");                                                DatabaseReference loandetail=mDatabases6.child(gmid).child("project").child("loans").push();                                                loandetail.child("date").setValue(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                                                loandetail.child("amount").setValue(loanappamount);                                                DatabaseReference newloaninfos=mDatatabasekey.child("grouploans").child("approvals").child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                                                newloaninfos.child("ukey").setValue(gmid);                                                newloaninfos.child("amount").setValue(loanappamount);                                                DatabaseReference ltl=accounting.child("Longtermloan").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                                                ltl.child("name").setValue("Loans");                                                ltl.child("amount").setValue(loancash);                                                ltl.child("type").setValue("blue");                                                ltl.child("meet").setValue(meetid);                                                ltl.child("group").setValue(grpkey);                                                ltl.child("debitac").setValue("Longtermloan");                                                ltl.child("creditac").setValue("BankCash");                                                ltl.child("description").setValue("Loan Given to "+jina);                                                ltl.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference ltl2=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                                                ltl2.child("name").setValue("Non-Current Assets");                                                ltl2.child("amount").setValue(loancash);                                                ltl2.child("type").setValue("red");                                                ltl2.child("meet").setValue(meetid);                                                ltl2.child("group").setValue(grpkey);                                                ltl2.child("debitac").setValue("Longtermloan");                                                ltl2.child("creditac").setValue("BankCash");                                                ltl2.child("description").setValue("Loan Given to "+jina);                                                ltl2.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference ltl2m=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child("all").push();                                                ltl2m.child("name").setValue("Non-Current Assets");                                                ltl2m.child("amount").setValue(loancash);                                                ltl2m.child("type").setValue("red");                                                ltl2m.child("meet").setValue(meetid);                                                ltl2m.child("group").setValue(grpkey);                                                ltl2m.child("debitac").setValue("Longtermloan");                                                ltl2m.child("creditac").setValue("BankCash");                                                ltl2m.child("description").setValue("Loan Given to "+jina);                                                ltl2m.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference inc1=accounting.child("Income").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                                                inc1.child("name").setValue("Income");                                                inc1.child("amount").setValue(String.valueOf(Double.parseDouble(loanappamount)-Double.parseDouble(loancash)));                                                inc1.child("type").setValue("blue");                                                inc1.child("meet").setValue(meetid);                                                inc1.child("group").setValue(grpkey);                                                inc1.child("debitac").setValue("Income");                                                inc1.child("creditac").setValue("-");                                                inc1.child("description").setValue("Loan Interest paid by "+jina);                                                inc1.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference inc2=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                                                inc2.child("name").setValue("Income");                                                inc2.child("amount").setValue(String.valueOf(Double.parseDouble(loanappamount)-Double.parseDouble(loancash)));                                                inc2.child("type").setValue("blue");                                                inc2.child("meet").setValue(meetid);                                                inc2.child("group").setValue(grpkey);                                                inc2.child("debitac").setValue("Income");                                                inc2.child("creditac").setValue("-");                                                inc2.child("description").setValue("Loan Interest paid by "+jina);                                                inc2.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference inc2m=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child("all").push();                                                inc2m.child("name").setValue("Income");                                                inc2m.child("amount").setValue(String.valueOf(Double.parseDouble(loanappamount)-Double.parseDouble(loancash)));                                                inc2m.child("type").setValue("blue");                                                inc2m.child("meet").setValue(meetid);                                                inc2m.child("group").setValue(grpkey);                                                inc2m.child("debitac").setValue("Income");                                                inc2m.child("creditac").setValue("-");                                                inc2m.child("description").setValue("Loan Interest paid by "+jina);                                                inc2m.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference fees1lo=accounting.child("Feesfines").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                                                fees1lo.child("name").setValue("Fees and Fines");                                                fees1lo.child("amount").setValue(fee1);                                                fees1lo.child("type").setValue("blue");                                                fees1lo.child("meet").setValue(meetid);                                                fees1lo.child("group").setValue(grpkey);                                                fees1lo.child("debitac").setValue("BankCash");                                                fees1lo.child("creditac").setValue("-");                                                fees1lo.child("description").setValue("Loan Processing Fees for "+jina);                                                fees1lo.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference fees2lo=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                                                fees2lo.child("name").setValue("Fees and Fines");                                                fees2lo.child("amount").setValue(fee2);                                                fees2lo.child("type").setValue("blue");                                                fees2lo.child("meet").setValue(meetid);                                                fees2lo.child("group").setValue(grpkey);                                                fees2lo.child("debitac").setValue("Feesfines");                                                fees2lo.child("creditac").setValue("-");                                                fees2lo.child("description").setValue("Loan Processing Fees for "+jina);                                                fees2lo.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference fees2lom=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child("all").push();                                                fees2lom.child("name").setValue("Fees and Fines");                                                fees2lom.child("amount").setValue(fee2);                                                fees2lom.child("type").setValue("blue");                                                fees2lom.child("meet").setValue(meetid);                                                fees2lom.child("group").setValue(grpkey);                                                fees2lom.child("debitac").setValue("Feesfines");                                                fees2lom.child("creditac").setValue("-");                                                fees2lom.child("description").setValue("Loan Processing Fees for "+jina);                                                fees2lom.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference peracc=memacco.push();                                                peracc.child("name").setValue("Loan");                                                peracc.child("amount").setValue(loancash);                                                peracc.child("type").setValue("blue");                                                peracc.child("meet").setValue(meetid);                                                peracc.child("group").setValue(grpkey);                                                peracc.child("debitac").setValue("member");                                                peracc.child("creditac").setValue("BankCash");                                                peracc.child("description").setValue("Loan for "+jina);                                                peracc.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference peraccfee=memacco.push();                                                peraccfee.child("name").setValue("Income");                                                peraccfee.child("amount").setValue(String.valueOf(Double.parseDouble(loanappamount)-Double.parseDouble(loancash)));                                                peraccfee.child("type").setValue("blue");                                                peraccfee.child("meet").setValue(meetid);                                                peraccfee.child("group").setValue(grpkey);                                                peraccfee.child("debitac").setValue("member");                                                peraccfee.child("creditac").setValue("Income");                                                peraccfee.child("description").setValue("Loan Interest");                                                peraccfee.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference officerim=accounting.child("Imprests").child(nme).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).child("Trans").child("all").push();                                                officerim.child("name").setValue("Loans");                                                officerim.child("amount").setValue(loancash);                                                officerim.child("type").setValue("red");                                                officerim.child("meet").setValue(meetid);                                                officerim.child("group").setValue(grpkey);                                                officerim.child("creditac").setValue(nme);                                                officerim.child("debitac").setValue(jina);                                                officerim.child("description").setValue("Loan to "+jina);                                                officerim.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                DatabaseReference unhanded=accounting.child("Unhanded").child("Trans").child("all").push();                                                unhanded.child("name").setValue("Loans");                                                unhanded.child("amount").setValue(loancash);                                                unhanded.child("type").setValue("red");                                                unhanded.child("meet").setValue("-");                                                unhanded.child("group").setValue("-");                                                unhanded.child("debitac").setValue(jina);                                                unhanded.child("creditac").setValue("Unhanded");                                                unhanded.child("description").setValue(nme+"'s Imprest for Loan given to "+jina);                                                unhanded.child("timestamp").setValue(ServerValue.TIMESTAMP);                                                mD0.child(user).addListenerForSingleValueEvent(new ValueEventListener() {                                                    @Override                                                    public void onDataChange(DataSnapshot dataSnapshot) {                                                        if (dataSnapshot.child("Balance").exists()){                                                            String balb4=dataSnapshot.child("Balance").getValue().toString();                                                            double balb44=Double.parseDouble(balb4);                                                            double e=balb44-Double.parseDouble(loancash);                                                            DatabaseReference newdepo=mD0.child(user);                                                            newdepo.child("Balance").setValue(String.valueOf(e));                                                        }else {                                                            String balb4="0";                                                            double balb44=Double.parseDouble(balb4);                                                            double e=balb44-Double.parseDouble(loancash);                                                            DatabaseReference newdepo=mD0.child(user);                                                            newdepo.child("Balance").setValue(String.valueOf(e));                                                        }                                                    }                                                    @Override                                                    public void onCancelled(DatabaseError databaseError) {                                                    }                                                });                                            }                                            @Override                                            public void onCancelled(DatabaseError databaseError) {                                            }                                        });                                    }                                    @Override                                    public void onCancelled(DatabaseError databaseError) {                                    }                                });                                DatabaseReference rr=mDatabases2;                                rr.child("status").setValue("done");                                DatabaseReference db=mDatabases.child("finances").child(grpkey).child("grouploans").child("loanon").push();                                db.child("user").setValue(gmid);                                mProgress.dismiss();                                Toast.makeText(acceptloan.this,"Group Loan Approved!", Toast.LENGTH_LONG).show();                                Intent userwindo = new Intent(acceptloan.this,meeting.class);                                userwindo.putExtra("key",grpkey);                                startActivity(userwindo);                                finish();                            }                        }                        @Override                        public void onCancelled(DatabaseError databaseError) {                        }                    });                }            }            @Override            public void onCancelled(DatabaseError databaseError) {            }        });    }    private void accept() {        mProgress.setMessage("Accepting Loan for "+jina);        mProgress.setCanceledOnTouchOutside(false);        mProgress.show();        mDatabases5.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(final DataSnapshot dataSnapshot) {                final String currloan=(String)dataSnapshot.child("currentloan").getValue();                mDatabases2.addListenerForSingleValueEvent(new ValueEventListener() {                    @Override                    public void onDataChange(DataSnapshot dataSnapshot1) {                        loanappamount=dataSnapshot1.child("amountrequested").getValue().toString();                        loancash=dataSnapshot1.child("amountcash").getValue().toString();                        final String installments=dataSnapshot1.child("monthlypay").getValue().toString();                        double currloanint=Double.parseDouble(currloan);                        final double loanapp=Double.parseDouble(loancash);                        final double newloans=currloanint+loanapp;                        String newcurrloan=String.valueOf(newloans);                        DatabaseReference newgrploan=mDatabases5;                        newgrploan.child("currentloan").setValue(newcurrloan);                        DatabaseReference newloanee=mDatabases5.child("loanees").push();                        newloanee.child("dateapproved").setValue(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                        newloanee.child("amount").setValue(loanappamount);                        final DatabaseReference newloaninfo=mDatabases5.child("approvals").push();                        final String infoid=newloaninfo.getKey();                        newloaninfo.child("dateapproved").setValue(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                        newloaninfo.child("amount").setValue(loanappamount);                        newloaninfo.child("amountcash").setValue(loancash);                        newloaninfo.child("memberid").setValue(u_key);                        newloaninfo.child("groupid").setValue(grpkey);                        newloaninfo.child("status").setValue("done");                        DatabaseReference loanrequest=mDatabase.push();                        loanrequest.child("amountcash").setValue(loancash);                        loanrequest.child("userid").setValue(u_key);                        loanrequest.child("amountrequested").setValue(loanappamount);                        loanrequest.child("monthlypay").setValue(installments);                        loanrequest.child("status").setValue("accepted");                        loanrequest.child("type").setValue("indv");                        loanrequest.child("gmid").setValue(u_key);                        loanrequest.child("date").setValue(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                        loanrequest.child("gname").setValue(ggname);                        loanrequest.child("username").setValue(jina);                        if (loanapp<=20000) {                            DatabaseReference lfee = mDatabases4.child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).child("loanprocessing").push();                            lfee.child("amount").setValue(String.valueOf(0.01 * Double.parseDouble(loancash)));                            lfee.child("memberid").setValue(u_key);                            newloaninfo.child("fee").setValue(String.valueOf(0.01 * Double.parseDouble(loancash)));                            fee1=String.valueOf(0.01 * Double.parseDouble(loancash));                            DatabaseReference lfees = data.child("loans").child("approvals").child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                            lfees.child("amount").setValue(String.valueOf(0.01 * Double.parseDouble(loancash)));                            lfees.child("memberid").setValue(u_key);                        }else{                            DatabaseReference lfee = mDatabases4.child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).child("loanprocessing").push();                            lfee.child("amount").setValue(String.valueOf(200+(0.01 * Double.parseDouble(loancash))));                            lfee.child("memberid").setValue(u_key);                            newloaninfo.child("fee").setValue(String.valueOf(200+(0.01 * Double.parseDouble(loancash))));                            fee2=String.valueOf(200+(0.01 * Double.parseDouble(loancash)));                            DatabaseReference lfees = data.child("loans").child("approvals").child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                            lfees.child("amount").setValue(String.valueOf(200+(0.01 * Double.parseDouble(loancash))));                            lfees.child("memberid").setValue(u_key);                        }                        data.child("loans").addListenerForSingleValueEvent(new ValueEventListener() {                            @Override                            public void onDataChange(DataSnapshot dataSnapshot) {                                String currloan=(String)dataSnapshot.child("totalloan").getValue();                                double currloanint=Double.parseDouble(currloan);                                double loanapp=Double.parseDouble(loanappamount);                                double newloans=currloanint+loanapp;                                String newcurrloan=String.valueOf(newloans);                                DatabaseReference newpersonalloan=data.child("loans");                                newpersonalloan.child("info").setValue(infoid);                                newpersonalloan.child("totalloan").setValue(newcurrloan);                                newpersonalloan.child("installment").setValue(installments);                                newpersonalloan.child("nextloanpaydate").setValue(setdate());                                newpersonalloan.child("flag").setValue("1");                                DatabaseReference loanflag=data;                                loanflag.child("loanflag").setValue("yes");                                DatabaseReference loandetail=data.child("loans").child("loans").push();                                loandetail.child("date").setValue(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                                loandetail.child("amount").setValue(loanappamount);                                final String amnt=newcurrloan;                                DatabaseReference newloaninfos=mDatatabasekey.child("loans").child("approvals").child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                                newloaninfos.child("ukey").setValue(u_key);                                newloaninfos.child("amount").setValue(amnt);                                data.child("ptemptrs").addListenerForSingleValueEvent(new ValueEventListener() {                                    @Override                                    public void onDataChange(DataSnapshot dataSnapshot) {                                        if (dataSnapshot.exists()){                                            String id=dataSnapshot.child("pid").getValue().toString();                                            final DatabaseReference tt=mDatatabasekey.child("transactions").child(meetid).child(id);                                            tt.child("loangvn").setValue(amnt);                                            tt.child("loancf").setValue(amnt);                                        }                                    }                                    @Override                                    public void onCancelled(DatabaseError databaseError) {                                    }                                });                            }                            @Override                            public void onCancelled(DatabaseError databaseError) {                            }                        });                        DatabaseReference ltl=accounting.child("Longtermloan").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                        ltl.child("name").setValue("Loans");                        ltl.child("amount").setValue(loancash);                        ltl.child("type").setValue("blue");                        ltl.child("meet").setValue(meetid);                        ltl.child("group").setValue(grpkey);                        ltl.child("debitac").setValue("Longtermloan");                        ltl.child("creditac").setValue("BankCash");                        ltl.child("description").setValue("Loan Given to "+jina);                        ltl.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference ltl2=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                        ltl2.child("name").setValue("Non-Current Assets");                        ltl2.child("amount").setValue(loancash);                        ltl2.child("type").setValue("red");                        ltl2.child("meet").setValue(meetid);                        ltl2.child("group").setValue(grpkey);                        ltl2.child("debitac").setValue("Longtermloan");                        ltl2.child("creditac").setValue("BankCash");                        ltl2.child("description").setValue("Loan Given to "+jina);                        ltl2.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference ltl2m=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child("all").push();                        ltl2m.child("name").setValue("Non-Current Assets");                        ltl2m.child("amount").setValue(loancash);                        ltl2m.child("type").setValue("red");                        ltl2m.child("meet").setValue(meetid);                        ltl2m.child("group").setValue(grpkey);                        ltl2m.child("debitac").setValue("Longtermloan");                        ltl2m.child("creditac").setValue("BankCash");                        ltl2m.child("description").setValue("Loan Given to "+jina);                        ltl2m.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference inc1=accounting.child("Income").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                        inc1.child("name").setValue("Income");                        inc1.child("amount").setValue(String.valueOf(Double.parseDouble(loanappamount)-Double.parseDouble(loancash)));                        inc1.child("type").setValue("blue");                        inc1.child("meet").setValue(meetid);                        inc1.child("group").setValue(grpkey);                        inc1.child("debitac").setValue("Income");                        inc1.child("creditac").setValue("-");                        inc1.child("description").setValue("Loan Interest paid by"+jina);                        inc1.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference inc2=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                        inc2.child("name").setValue("Income");                        inc2.child("amount").setValue(String.valueOf(Double.parseDouble(loanappamount)-Double.parseDouble(loancash)));                        inc2.child("type").setValue("blue");                        inc2.child("meet").setValue(meetid);                        inc2.child("group").setValue(grpkey);                        inc2.child("debitac").setValue("Income");                        inc2.child("creditac").setValue("-");                        inc2.child("description").setValue("Loan Interest paid by"+jina);                        inc2.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference inc2m=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child("all").push();                        inc2m.child("name").setValue("Income");                        inc2m.child("amount").setValue(String.valueOf(Double.parseDouble(loanappamount)-Double.parseDouble(loancash)));                        inc2m.child("type").setValue("blue");                        inc2m.child("meet").setValue(meetid);                        inc2m.child("group").setValue(grpkey);                        inc2m.child("debitac").setValue("Income");                        inc2m.child("creditac").setValue("-");                        inc2m.child("description").setValue("Loan Interest paid by"+jina);                        inc2m.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference fees1lo=accounting.child("Feesfines").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                        fees1lo.child("name").setValue("Fees and Fines");                        fees1lo.child("amount").setValue(fee1);                        fees1lo.child("type").setValue("blue");                        fees1lo.child("meet").setValue(meetid);                        fees1lo.child("group").setValue(grpkey);                        fees1lo.child("debitac").setValue("BankCash");                        fees1lo.child("creditac").setValue("-");                        fees1lo.child("description").setValue("Loan Processing Fees for "+jina);                        fees1lo.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference fees2lo=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).push();                        fees2lo.child("name").setValue("Fees and Fines");                        fees2lo.child("amount").setValue(fee2);                        fees2lo.child("type").setValue("blue");                        fees2lo.child("meet").setValue(meetid);                        fees2lo.child("group").setValue(grpkey);                        fees2lo.child("debitac").setValue("Feesfines");                        fees2lo.child("creditac").setValue("-");                        fees2lo.child("description").setValue("Loan Processing Fees for "+jina);                        fees2lo.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference fees2lom=accounting.child("BankCash").child(grpkey).child("Trans").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child("all").push();                        fees2lom.child("name").setValue("Fees and Fines");                        fees2lom.child("amount").setValue(fee2);                        fees2lom.child("type").setValue("blue");                        fees2lom.child("meet").setValue(meetid);                        fees2lom.child("group").setValue(grpkey);                        fees2lom.child("debitac").setValue("Feesfines");                        fees2lom.child("creditac").setValue("-");                        fees2lom.child("description").setValue("Loan Processing Fees for "+jina);                        fees2lom.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference peracc=memacco.push();                        peracc.child("name").setValue("Loan");                        peracc.child("amount").setValue(loancash);                        peracc.child("type").setValue("blue");                        peracc.child("meet").setValue(meetid);                        peracc.child("group").setValue(grpkey);                        peracc.child("debitac").setValue("member");                        peracc.child("creditac").setValue("BankCash");                        peracc.child("description").setValue("Loan for "+jina);                        peracc.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference peraccfee=memacco.push();                        peraccfee.child("name").setValue("Income");                        peraccfee.child("amount").setValue(String.valueOf(Double.parseDouble(loanappamount)-Double.parseDouble(loancash)));                        peraccfee.child("type").setValue("blue");                        peraccfee.child("meet").setValue(meetid);                        peraccfee.child("group").setValue(grpkey);                        peraccfee.child("debitac").setValue("member");                        peraccfee.child("creditac").setValue("Income");                        peraccfee.child("description").setValue("Loan Interest");                        peraccfee.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference officerim=accounting.child("Imprests").child(nme).child(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date())).child("Trans").child("all").push();                        officerim.child("name").setValue("Loans");                        officerim.child("amount").setValue(loancash);                        officerim.child("type").setValue("red");                        officerim.child("meet").setValue(meetid);                        officerim.child("group").setValue(grpkey);                        officerim.child("creditac").setValue(nme);                        officerim.child("debitac").setValue(jina);                        officerim.child("description").setValue("Loan to "+jina);                        officerim.child("timestamp").setValue(ServerValue.TIMESTAMP);                        DatabaseReference unhanded=accounting.child("Unhanded").child("Trans").child("all").push();                        unhanded.child("name").setValue("Loans");                        unhanded.child("amount").setValue(loancash);                        unhanded.child("type").setValue("red");                        unhanded.child("meet").setValue("-");                        unhanded.child("group").setValue("-");                        unhanded.child("debitac").setValue(jina);                        unhanded.child("creditac").setValue("Unhanded");                        unhanded.child("description").setValue(nme+"'s Imprest for Loan given to "+jina);                        unhanded.child("timestamp").setValue(ServerValue.TIMESTAMP);                        mD0.child(user).addListenerForSingleValueEvent(new ValueEventListener() {                            @Override                            public void onDataChange(DataSnapshot dataSnapshot) {                                if (dataSnapshot.child("Balance").exists()){                                    String balb4=dataSnapshot.child("Balance").getValue().toString();                                    double balb44=Double.parseDouble(balb4);                                    double e=balb44-Double.parseDouble(loancash);                                    DatabaseReference newdepo=mD0.child(user);                                    newdepo.child("Balance").setValue(String.valueOf(e));                                }else {                                    String balb4="0";                                    double balb44=Double.parseDouble(balb4);                                    double e=balb44-Double.parseDouble(loancash);                                    DatabaseReference newdepo=mD0.child(user);                                    newdepo.child("Balance").setValue(String.valueOf(e));                                }                            }                            @Override                            public void onCancelled(DatabaseError databaseError) {                            }                        });                    }                    @Override                    public void onCancelled(DatabaseError databaseError) {                    }                });                DatabaseReference rr=mDatabases2;                rr.child("status").setValue("done");                DatabaseReference db=mDatabases5.child("loanon").push();                db.child("user").setValue(u_key);                FirebaseDatabase.getInstance().getReference().child("members").child(u_key).addListenerForSingleValueEvent(new ValueEventListener() {                    @Override                    public void onDataChange(DataSnapshot dataSnapshot) {                        if (dataSnapshot.child("forms").child("id").exists()){                            String id=dataSnapshot.child("forms").child("id").getValue().toString();                            DatabaseReference newform=FirebaseDatabase.getInstance().getReference().child("forms").child(new SimpleDateFormat("yyyy").format(new Date())).child(new SimpleDateFormat("MMM").format(new Date())).child("all").child(id);                            newform.child("status").setValue("disbursed");                            newform.child("date").setValue(new SimpleDateFormat("EEE, MMM d, ''yy").format(new Date()));                        }                    }                    @Override                    public void onCancelled(DatabaseError databaseError) {                    }                });                DatabaseReference endmeetnot=reference.child("Notifications").child("LoanApproval").push();                endmeetnot.child("amount").setValue(loancash);                endmeetnot.child("user").setValue(jina);                mProgress.dismiss();                Toast.makeText(acceptloan.this,"Approved!", Toast.LENGTH_LONG).show();                Intent userwindo = new Intent(acceptloan.this,meeting.class);                userwindo.putExtra("key",grpkey);                startActivity(userwindo);                finish();            }            @Override            public void onCancelled(DatabaseError databaseError) {            }        });    }    private String setdate() {        SimpleDateFormat sdf = new SimpleDateFormat("EEE, MMM d, ''yy", Locale.UK);        Calendar c = Calendar.getInstance();        c.setTime(new Date()); // Now use today date.        c.add(Calendar.DATE, 30); // Adding 30 days        String output = sdf.format(c.getTime());        return output;    }}